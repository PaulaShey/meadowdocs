{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Many other importers are planned but currently not implemented. These include:"}]},{"anchor":"Muse-importer","level":2,"type":"heading","text":"Muse importer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two possibilities envisioned for the Muse importer:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the simpler scenario, the Muse importer should be able to open a Muse bundle file and create containers in Meadow which correspond 1-1 to those in the Muse bundle. This is a one-shoot operation and doesn’t allow to easily link Meadow to a Muse DB,"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the more advanced implementation (which we can think more of as a “mounting” than mere “importing”) we should be able to connect to the Muse DB and offer live connection into the Muse DB, so that the user is still free to keep using Muse to edit her boards, but all these edits are immediately visible in the Meadow’s container representing the mounted Muse board(s). Naturally, this option requires some form of agreement with the Muse team."}]}]}]},{"anchor":"iCloud-Drive--Dropbox-Importers","level":2,"type":"heading","text":"iCloud Drive & Dropbox Importers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These importers work similarly to the Local "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/FS_Importer"},{"type":"text","text":", except that they are able to connect to the corresponding cloud services and – by default – expose the whole user’s filesystem as a set of Meadow’s containers. This make them more universal, as no requirement is made as for the host device to have anything mounted in its local filesystem. In practice, we expect these will be used instead of the Local Filesystem importer, which is mainly currently used for testing."}]},{"anchor":"PocketReadwise-Reader-articles-importer","level":2,"type":"heading","text":"Pocket\/Readwise Reader articles importer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These importers should establish a permanent connection to the Pocket\/Readwise read-later services and expose the user-collected articles as a sub-containers grouped by user-assigned tags, metadata such as article types, and dates."}]},{"anchor":"Web-Bookmarks-importer","level":2,"type":"heading","text":"Web Bookmarks importer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A web bookmark importer should expose Safari and other browser’s bookmarks as a set of containers, reflecting the structure the user might have established using bookmarks folders."}]},{"anchor":"Calendar-importer-for-creation-of-users-life-timeline","level":2,"type":"heading","text":"Calendar importer (for creation of user’s life timeline)"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A calendar importer should be exposing the user’s calendar(s) as a Meadow container, with sub-containers representing years, months, weeks, and days. It seems especially attractive to combine this with Apple Photos importer in order to create a user’s diary."}]},{"anchor":"Apple-Photos-importer","level":2,"type":"heading","text":"Apple Photos importer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This importer should expose the logged in user’s Apple Photos, grouped into sub-containers by Album, Date, and other sensible metadata."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"It seems especially attractive to combine this importer with a Calendar importer to create a user’s life diary container, whose sub-containers correspond to years, months, weeks, and days and contain representation of events and photos which occurred within the given time frame."}]},{"anchor":"Bear-and-Obsidian-importer","level":2,"type":"heading","text":"Bear and Obsidian importer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Similarly to the Muse importer, these importers could be implemented in two modes: 1) a one-shot mode, which simply imports one of the PKM application’s DB and creates a corresponding Meadow’s container with an internal structure attempting to map the original structure of the knowledge graph, and a 2) a synced mode, which maintains persistent connection with the original’s application DB and presents a current view into its DB, allowing the user to continue to use the original PKM application."}]},{"anchor":"IMDBTMDB-movies-importer","level":2,"type":"heading","text":"IMDB\/TMDB movies importer"},{"type":"paragraph","inlineContent":[{"type":"text","text":"These importers connect to the movie DB service and creates Muse containers representing movies, which the user decided to put on pre-defined lists, such as “watched” or “to watch”."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"NOTE: While an importer for IMDB would be much desirable, given the service’s popularity, the cost of the API access to this Amazon’s service seems prohibitively expensive (on the order of $300k\/year)."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/meadow\/other_importers"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Other_Importers","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A list of planned other importers"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Other Importers","role":"article","modules":[{"name":"Meadow"}]},"hierarchy":{"paths":[["doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow"]]},"seeAlsoSections":[{"title":"Information Importers","identifiers":["doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/PDF_Importer","doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/FS_Importer"],"generated":true}],"references":{"doc://io.wildland.meadow.alpha/documentation/Meadow":{"role":"collection","title":"Meadow","abstract":[{"type":"text","text":"Welcome to the the Meadow developer’s documentation."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow","kind":"symbol","type":"topic","url":"\/documentation\/meadow"},"doc://io.wildland.meadow.alpha/documentation/Meadow/PDF_Importer":{"role":"article","title":"PDF Document Importer","abstract":[{"type":"text","text":"Allows to import a PDF document as a set of nested Boards, organized using the PDF’s table of content (outline)."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/PDF_Importer","kind":"article","type":"topic","url":"\/documentation\/meadow\/pdf_importer"},"doc://io.wildland.meadow.alpha/documentation/Meadow/FS_Importer":{"role":"article","title":"Local Filesystem Importer","abstract":[{"type":"text","text":"Expose a local Filesystem as a set of Meadow containers."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/FS_Importer","kind":"article","type":"topic","url":"\/documentation\/meadow\/fs_importer"}}}