{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Containers are the fundamental unit of information management in Meadow."}]},{"anchor":"Container-Types","level":2,"type":"heading","text":"Container Types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Container"},{"type":"text","text":" protocol is the base for all the classes representing various containers in Meadow. The picture below illustrates the main types of containers used in Meadow."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Containers"}]},{"anchor":"Containers-lifecycle","level":2,"type":"heading","text":"Container’s lifecycle"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each container’s lifecycle is tracked by two primary states:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"View state (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ContainerState\/ViewState-swift.enum"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Load state (see "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ContainerState\/LoadState-swift.enum"},{"type":"text","text":")"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"view state"}]},{"type":"text","text":" is used primarily for the Board drawing, and so it is optimized for"},{"type":"text","text":" "},{"type":"text","text":"use by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ContainerView"},{"type":"text","text":" and gives information whether the container’s content"},{"type":"text","text":" "},{"type":"text","text":"is ready to be displayed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"load state"}]},{"type":"text","text":" tracks the status of loading of the underlying container’s content, such as loading of its subcontainers and\/or the actual data, such as the Image or PDF file data."}]},{"anchor":"Graph-Persistency","level":2,"type":"heading","text":"Graph Persistency"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two aspects of persistency:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Graph persistency"}]},{"type":"text","text":", i.e. storing each of the container’s properties, such as name and placement (in parent container(s)) and relations to other containers in persistent store. This is implemented using Core Data and described in more detail in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GraphPersistency"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Data persistency"}]},{"type":"text","text":", which is concerned with storage of container source data, such as files or images, which the containers represent. For example, a PDF container’s source PDF file would be stored by this subsystem. This subsystem allows user-defined pluggable storages, and is described in more detail in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/DataPersistency"}]}]}]},{"anchor":"The-Container-vs-PersistentContainer-types","level":2,"type":"heading","text":"The `Container` vs `PersistentContainer` types"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Container"},{"type":"text","text":"-protocol based classes are "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" directly stored in Core Data. Instead a dedicated class "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/PersistentContainer"},{"type":"text","text":" has been introduced for this purpose. It tries to cover all the properties of the various "},{"type":"codeVoice","code":"Container"},{"type":"text","text":"-based classes, which we want to save into the store."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The primary reason for this design decision is that it has seemed reasonable to have multiple different types to represent different kinds of containers (for images, FS folders, PDFs, Markdown text, etc). At the same time, it seemed unfeasible to maintain a CoreData model for each of these container types."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"But with further development it turned out that the simple classes for containers need to be decomposed further and today we also have generator actors ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/SubContainersGenerator"},{"type":"text","text":") and auxiliary managers ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/SubContainersManager"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/CacheableThumbnailContainer"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note however, that a special considerations would need to be given to the interaction between actors (e.g. "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/SubContainersGenerator"},{"type":"text","text":") and this class. It seems to me we need an actor for tasks such as container or thumbnail generation, since these actions are often done in parallel, while at the same time we need a place to store the data from where SwiftUI code can read them directly (which is what cannot be done if we store data in actors only)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"So today the idea of unifying all the "},{"type":"codeVoice","code":"Container"},{"type":"text","text":"-based classes into just one class, and making this class also double as a SwiftData-storable object seems feasible. This might simplify lots of things, such as mostly eliminate the need for CoreData-related boilerplate ("},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/PersistentContainers"},{"type":"text","text":", "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ManualPlacements"},{"type":"text","text":", etc)."}]},{"anchor":"The-RootContainer-considerations","level":2,"type":"heading","text":"The RootContainer considerations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/RootContainer"},{"type":"text","text":" is a special node which is considered the root of the Meadow’s graph. It is always loaded (or created) when the app starts, and all the other nodes are always expected to be direct or indirect children of this node."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While the idea of having a pre-defined root node seems valid to me still, I’m no longer convinced about the need to always load the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/RootContainer"},{"type":"text","text":". If we moved the CoreData-loading code into BoardView and use the new SwiftData’s "},{"type":"codeVoice","code":"@Query"},{"type":"text","text":" property wrapper, then we could get rid of the need to keep large portions of the graph in memory at all times. Yet, we would need to re-design the Navbar in that case."}]},{"anchor":"Further-reading","level":2,"type":"heading","text":"Further reading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GraphPersistency"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/BlobStorages"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/meadow\/graphmodel"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GraphModel","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This article discusses how the Meadow’s Knowledge Graph is exposed to the rest of the code, how it is stored and synced between devices."}],"kind":"article","metadata":{"roleHeading":"Article","title":"The Graph Model","role":"article","modules":[{"name":"Meadow"}]},"hierarchy":{"paths":[["doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow"]]},"seeAlsoSections":[{"title":"The Knowledge Graph","identifiers":["doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GraphPersistency","doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/DataPersistency","doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Container"],"generated":true}],"references":{"doc://io.wildland.meadow.alpha/documentation/Meadow/Container":{"role":"symbol","title":"Container","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"abstract":[{"type":"text","text":"A representation of an abstract data container."},{"type":"text","text":" "},{"type":"text","text":"The base protocol for all the Meadow containers types."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Container","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Container"}],"url":"\/documentation\/meadow\/container"},"doc://io.wildland.meadow.alpha/documentation/Meadow/RecursiveContainer":{"role":"symbol","title":"RecursiveContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecursiveContainer"}],"abstract":[{"type":"text","text":"Containers which adopt this protocol maintain a list of their own"},{"type":"text","text":" "},{"type":"text","text":"children, i.e. subContainers."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/RecursiveContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RecursiveContainer"}],"url":"\/documentation\/meadow\/recursivecontainer"},"doc://io.wildland.meadow.alpha/documentation/Meadow/PersistentContainers":{"role":"symbol","title":"PersistentContainers","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistentContainers"}],"abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/PersistentContainers","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistentContainers"}],"url":"\/documentation\/meadow\/persistentcontainers"},"doc://io.wildland.meadow.alpha/documentation/Meadow/CacheableThumbnailContainer":{"role":"symbol","title":"CacheableThumbnailContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CacheableThumbnailContainer"}],"abstract":[{"type":"text","text":"Containers which can have their content view cached (of which result is a"},{"type":"text","text":" "},{"type":"text","text":"generation of a thumbnail representing the container’s content) should"},{"type":"text","text":" "},{"type":"text","text":"declare this protocol compatibility."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/CacheableThumbnailContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CacheableThumbnailContainer"}],"url":"\/documentation\/meadow\/cacheablethumbnailcontainer"},"doc://io.wildland.meadow.alpha/documentation/Meadow/SubContainersGenerator":{"role":"symbol","title":"SubContainersGenerator","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubContainersGenerator"}],"abstract":[{"type":"text","text":"An actor used to automatically generate subContainers to fill in"},{"type":"text","text":" "},{"type":"text","text":"a container implementing the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GeneratedRecursiveContainer"},{"type":"text","text":" protocol."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/SubContainersGenerator","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubContainersGenerator"}],"url":"\/documentation\/meadow\/subcontainersgenerator"},"doc://io.wildland.meadow.alpha/documentation/Meadow":{"role":"collection","title":"Meadow","abstract":[{"type":"text","text":"Welcome to the the Meadow developer’s documentation."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow","kind":"symbol","type":"topic","url":"\/documentation\/meadow"},"doc://io.wildland.meadow.alpha/documentation/Meadow/PersistentContainer":{"role":"symbol","title":"PersistentContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PersistentContainer"}],"abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/PersistentContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PersistentContainer"}],"url":"\/documentation\/meadow\/persistentcontainer"},"doc://io.wildland.meadow.alpha/documentation/Meadow/GeneratedRecursiveContainer":{"role":"symbol","title":"GeneratedRecursiveContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GeneratedRecursiveContainer"}],"abstract":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/RecursiveContainer"},{"type":"text","text":" holding automatically-generated containers,"},{"type":"text","text":" "},{"type":"text","text":"such as PDF pages or Folder’s files."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GeneratedRecursiveContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"GeneratedRecursiveContainer"}],"url":"\/documentation\/meadow\/generatedrecursivecontainer"},"Containers":{"alt":"Types of Containers","type":"image","identifier":"Containers","variants":[{"url":"\/images\/Containers~dark.png","traits":["1x","dark"]}]},"doc://io.wildland.meadow.alpha/documentation/Meadow/DataPersistency":{"role":"collectionGroup","title":"Data Persistency","abstract":[{"type":"text","text":"Data Persistency is concerned with storage of container source data, such as files or images, which the containers represent."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/DataPersistency","kind":"article","type":"topic","url":"\/documentation\/meadow\/datapersistency"},"doc://io.wildland.meadow.alpha/documentation/Meadow/ContainerState/ViewState-swift.enum":{"role":"symbol","title":"ContainerState.ViewState","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ViewState"}],"abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ContainerState\/ViewState-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ViewState"}],"url":"\/documentation\/meadow\/containerstate\/viewstate-swift.enum"},"doc://io.wildland.meadow.alpha/documentation/Meadow/ManualPlacements":{"role":"symbol","title":"ManualPlacements","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManualPlacements"}],"abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ManualPlacements","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ManualPlacements"}],"url":"\/documentation\/meadow\/manualplacements"},"doc://io.wildland.meadow.alpha/documentation/Meadow/SubContainersManager":{"role":"symbol","title":"SubContainersManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubContainersManager"}],"abstract":[{"type":"text","text":"Manager for the collection of subContainers of a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/RecursiveContainer"},{"type":"text","text":"."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/SubContainersManager","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SubContainersManager"}],"url":"\/documentation\/meadow\/subcontainersmanager"},"doc://io.wildland.meadow.alpha/documentation/Meadow/RootContainer":{"role":"symbol","title":"RootContainer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RootContainer"}],"abstract":[{"type":"text","text":"The top-most container, the root node for the knowledge graph"},{"type":"text","text":" "},{"type":"text","text":"comprised by all of the Meadow’s interconnected containers."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/RootContainer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RootContainer"}],"url":"\/documentation\/meadow\/rootcontainer"},"doc://io.wildland.meadow.alpha/documentation/Meadow/ContainerState/LoadState-swift.enum":{"role":"symbol","title":"ContainerState.LoadState","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LoadState"}],"abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ContainerState\/LoadState-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LoadState"}],"url":"\/documentation\/meadow\/containerstate\/loadstate-swift.enum"},"doc://io.wildland.meadow.alpha/documentation/Meadow/BlobStorages":{"role":"symbol","title":"BlobStorages","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"BlobStorages"}],"abstract":[{"type":"text","text":"A collection of all configured storage providers"},{"type":"text","text":" "},{"type":"text","text":"Not all of them might be available at any given moment though."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/BlobStorages","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BlobStorages"}],"url":"\/documentation\/meadow\/blobstorages"},"doc://io.wildland.meadow.alpha/documentation/Meadow/GraphPersistency":{"role":"collectionGroup","title":"Metadata Persistency and Cloud syncing","abstract":[{"type":"text","text":"This document discusses how local and cloud persistence is implemented in Meadow."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/GraphPersistency","kind":"article","type":"topic","url":"\/documentation\/meadow\/graphpersistency"},"doc://io.wildland.meadow.alpha/documentation/Meadow/ContainerView":{"role":"symbol","title":"ContainerView","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerView"}],"abstract":[{"type":"text","text":"A view presenting a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Container"},{"type":"text","text":" including its rectangular border,"},{"type":"text","text":" "},{"type":"text","text":"title and the actual content, which can recursively comprise of other"},{"type":"text","text":" "},{"type":"text","text":"containers. Content caching (for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/CacheableThumbnailContainer"},{"type":"text","text":" containers) is"},{"type":"text","text":" "},{"type":"text","text":"also handled here."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/ContainerView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ContainerView"}],"url":"\/documentation\/meadow\/containerview"}}}