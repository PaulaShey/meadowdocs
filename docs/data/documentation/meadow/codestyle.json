{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Why-we-do-it","level":2,"type":"heading","text":"Why we do it?"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Consistency"}]},{"type":"text","text":". Any large code base with multiple team members should look as if only one programmer wrote it. In close source projects, it makes them easier to maintain. In open-source projects, it makes them easier to grow."}]},{"anchor":"How-we-do-it","level":2,"type":"heading","text":"How we do it?"},{"type":"paragraph","inlineContent":[{"type":"text","text":"At Meadow, we enforce coherent code style using a well-established tool in the Swift ecosystem: "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/realm\/SwiftLint"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"With a set of rules specified in the "},{"type":"codeVoice","code":".swiftlint.yml"},{"type":"text","text":" file in the project’s root directory."}]},{"type":"codeListing","syntax":"yml","code":["disabled_rules:","  - identifier_name","  - type_name","  - shorthand_operator","  - trailing_whitespace","  - redundant_discardable_let","  - nesting","  - todo","","opt_in_rules:","  - unhandled_throwing_task","  - unavailable_function","  - sorted_first_last","  - redundant_self_in_closure","  - redundant_string_enum_value","  - redundant_type_annotation","  - empty_collection_literal","  - empty_count","  - empty_string","  - empty_xctest_method","  - multiline_arguments","  - multiline_arguments_brackets","  - multiline_parameters_brackets","  - multiline_literal_brackets","  - multiline_function_chains","  - multiline_parameters","  - last_where","","analyzer_rules:","  - unused_declaration","  - unused_import","","file_length:","  warning: 1000","  error: 1000","","type_body_length:","  warning: 350","  error: 350","","function_body_length:","  warning: 70","","line_length:","  warning: 180","  ignores_comments: true","","switch_case_alignment:","  indented_cases: true"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each one of those rules can be checked if unclear what it does directly in the SwiftLint "},{"type":"reference","isActive":true,"identifier":"https:\/\/realm.github.io\/SwiftLint\/rule-directory.html"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For those unfamiliar with "},{"type":"strong","inlineContent":[{"type":"text","text":"SwiftLint"}]},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"disabled_rules"},{"type":"text","text":" - rules that will not be triggered when building project"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"opt_in_rules"},{"type":"text","text":" - rules that we opt in to, and will be checked when building project"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"analyzer_rules"},{"type":"text","text":" - those rules are only triggered with manual command "},{"type":"codeVoice","code":"swiftlint analyze"},{"type":"text","text":" and those are experimental"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then after those three parts, you can specify custom configuration for any given rule like for instance:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"line_length"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"switch_case_alignment"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"nesting"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"even more…"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For now, the given set of rules is pretty minimal and probably will evolve as the project grows, which is only natural, and please don’t hesitate to contribute to the rules."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/meadow\/codestyle"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/CodeStyle","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Why do we care about code style? Why are those important? How do we maintain it throughout the project?"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Code Style","role":"article","modules":[{"name":"Meadow"}]},"hierarchy":{"paths":[["doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow"]]},"seeAlsoSections":[{"title":"Implementation notes","identifiers":["doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/AppUI","doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Settings","doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/CommandLine","doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Testing"],"generated":true}],"references":{"doc://io.wildland.meadow.alpha/documentation/Meadow/CommandLine":{"role":"collectionGroup","title":"CommandLine","abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/CommandLine","kind":"article","type":"topic","url":"\/documentation\/meadow\/commandline"},"doc://io.wildland.meadow.alpha/documentation/Meadow":{"role":"collection","title":"Meadow","abstract":[{"type":"text","text":"Welcome to the the Meadow developer’s documentation."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow","kind":"symbol","type":"topic","url":"\/documentation\/meadow"},"doc://io.wildland.meadow.alpha/documentation/Meadow/Settings":{"role":"collectionGroup","title":"Settings Window","abstract":[{"type":"text","text":"The Settings Window."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Settings","kind":"article","type":"topic","url":"\/documentation\/meadow\/settings"},"https://realm.github.io/SwiftLint/rule-directory.html":{"title":"rules documentation","titleInlineContent":[{"type":"text","text":"rules documentation"}],"type":"link","identifier":"https:\/\/realm.github.io\/SwiftLint\/rule-directory.html","url":"https:\/\/realm.github.io\/SwiftLint\/rule-directory.html"},"https://github.com/realm/SwiftLint":{"title":"SwiftLint","titleInlineContent":[{"type":"text","text":"SwiftLint"}],"type":"link","identifier":"https:\/\/github.com\/realm\/SwiftLint","url":"https:\/\/github.com\/realm\/SwiftLint"},"doc://io.wildland.meadow.alpha/documentation/Meadow/AppUI":{"role":"collectionGroup","title":"App and UI architecture","abstract":[{"type":"text","text":"The App, Scenes and Views hierarchy."}],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/AppUI","kind":"article","type":"topic","url":"\/documentation\/meadow\/appui"},"doc://io.wildland.meadow.alpha/documentation/Meadow/Testing":{"role":"article","title":"Testing","abstract":[],"identifier":"doc:\/\/io.wildland.meadow.alpha\/documentation\/Meadow\/Testing","kind":"article","type":"topic","url":"\/documentation\/meadow\/testing"}}}